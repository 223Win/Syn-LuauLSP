const {
  TokenizationResult,
  Token,
  EncodedTokenizationResult
} = require('../languages.js');
const NullState = new class {
  clone() {
    return this;
  }
  equals(other) {
    return this === other;
  }
}();
function nullTokenize(languageId, state) {
  return new TokenizationResult([new Token(0, '', languageId)], state);
}
function nullTokenizeEncoded(languageId, state) {
  const tokens = new Uint32Array(2);
  tokens[0] = 0;
  tokens[1] = (languageId << 0 | 0 << 8 | 0 << 11 | 1 << 15 | 2 << 24) >>> 0;
  return new EncodedTokenizationResult(tokens, state === null ? NullState : state);
}
exports.NullState = NullState;
exports.nullTokenize = nullTokenize;
exports.nullTokenizeEncoded = nullTokenizeEncoded;