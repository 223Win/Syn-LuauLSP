const {
  registerEditorAction,
  EditorAction
} = require('../../../browser/editorExtensions.js');
const {
  EditorZoom
} = require('../../../common/config/editorZoom.js');
const {
  localizeWithPath
} = require('../../../../nls.js');
const _moduleId = "vs/editor/contrib/fontZoom/browser/fontZoom";
class EditorFontZoomIn extends EditorAction {
  constructor() {
    super({
      id: 'editor.action.fontZoomIn',
      label: localizeWithPath(_moduleId, 0, "Increase Editor Font Size"),
      alias: 'Increase Editor Font Size',
      precondition: undefined
    });
  }
  run(accessor, editor) {
    EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);
  }
}
class EditorFontZoomOut extends EditorAction {
  constructor() {
    super({
      id: 'editor.action.fontZoomOut',
      label: localizeWithPath(_moduleId, 1, "Decrease Editor Font Size"),
      alias: 'Decrease Editor Font Size',
      precondition: undefined
    });
  }
  run(accessor, editor) {
    EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);
  }
}
class EditorFontZoomReset extends EditorAction {
  constructor() {
    super({
      id: 'editor.action.fontZoomReset',
      label: localizeWithPath(_moduleId, 2, "Reset Editor Font Size"),
      alias: 'Reset Editor Font Size',
      precondition: undefined
    });
  }
  run(accessor, editor) {
    EditorZoom.setZoomLevel(0);
  }
}
registerEditorAction(EditorFontZoomIn);
registerEditorAction(EditorFontZoomOut);
registerEditorAction(EditorFontZoomReset);