const {
  __decorate,
  __param
} = require('../../../../../../../external/tslib/tslib.es6.js');
const {
  Extensions
} = require('../../../../platform/configuration/common/configurationRegistry.js');
const {
  IInstantiationService
} = require('../../../../platform/instantiation/common/instantiation.js');
const {
  Registry
} = require('../../../../platform/registry/common/platform.js');
const {
  Extensions$1
} = require('../../../common/contributions.js');
const {
  codeActionsExtensionPointDescriptor
} = require('../common/codeActionsExtensionPoint.js');
const {
  documentationExtensionPointDescriptor
} = require('../common/documentationExtensionPoint.js');
const {
  ExtensionsRegistry
} = require('../../../services/extensions/common/extensionsRegistry.js');
const {
  editorConfiguration,
  CodeActionsContribution
} = require('./codeActionsContribution.js');
const {
  CodeActionDocumentationContribution
} = require('./documentationContribution.js');
const codeActionsExtensionPoint = ExtensionsRegistry.registerExtensionPoint(codeActionsExtensionPointDescriptor);
const documentationExtensionPoint = ExtensionsRegistry.registerExtensionPoint(documentationExtensionPointDescriptor);
Registry.as(Extensions.Configuration).registerConfiguration(editorConfiguration);
let WorkbenchConfigurationContribution = class WorkbenchConfigurationContribution {
  constructor(instantiationService) {
    instantiationService.createInstance(CodeActionsContribution, codeActionsExtensionPoint);
    instantiationService.createInstance(CodeActionDocumentationContribution, documentationExtensionPoint);
  }
};
WorkbenchConfigurationContribution = __decorate([__param(0, IInstantiationService)], WorkbenchConfigurationContribution);
Registry.as(Extensions$1.Workbench).registerWorkbenchContribution(WorkbenchConfigurationContribution, 4);