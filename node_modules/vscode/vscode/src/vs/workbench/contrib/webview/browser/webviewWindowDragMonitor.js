const {
  addDisposableListener,
  EventType
} = require('../../../../base/browser/dom.js');
const {
  Disposable
} = require('../../../../base/common/lifecycle.js');
class WebviewWindowDragMonitor extends Disposable {
  constructor(targetWindow, getWebview) {
    super();
    this._register(addDisposableListener(targetWindow, EventType.DRAG_START, () => {
      getWebview()?.windowDidDragStart();
    }));
    const onDragEnd = () => {
      getWebview()?.windowDidDragEnd();
    };
    this._register(addDisposableListener(targetWindow, EventType.DRAG_END, onDragEnd));
    this._register(addDisposableListener(targetWindow, EventType.MOUSE_MOVE, currentEvent => {
      if (currentEvent.buttons === 0) {
        onDragEnd();
      }
    }));
  }
}
exports.WebviewWindowDragMonitor = WebviewWindowDragMonitor;