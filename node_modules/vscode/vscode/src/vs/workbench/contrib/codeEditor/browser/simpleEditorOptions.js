const {
  ContextMenuController
} = require('../../../../editor/contrib/contextmenu/browser/contextmenu.js');
const {
  SnippetController2
} = require('../../../../editor/contrib/snippet/browser/snippetController2.js');
const {
  SuggestController
} = require('../../../../editor/contrib/suggest/browser/suggestController.js');
const {
  MenuPreventer
} = require('./menuPreventer.js');
const {
  SelectionClipboardContributionID
} = require('./selectionClipboard.js');
const {
  TabCompletionController
} = require('../../snippets/browser/tabCompletion.js');
const {
  EditorExtensionsRegistry
} = require('../../../../editor/browser/editorExtensions.js');
function getSimpleEditorOptions(configurationService) {
  return {
    wordWrap: 'on',
    overviewRulerLanes: 0,
    glyphMargin: false,
    lineNumbers: 'off',
    folding: false,
    selectOnLineNumbers: false,
    hideCursorInOverviewRuler: true,
    selectionHighlight: false,
    scrollbar: {
      horizontal: 'hidden'
    },
    lineDecorationsWidth: 0,
    overviewRulerBorder: false,
    scrollBeyondLastLine: false,
    renderLineHighlight: 'none',
    fixedOverflowWidgets: true,
    acceptSuggestionOnEnter: 'smart',
    dragAndDrop: false,
    revealHorizontalRightPadding: 5,
    minimap: {
      enabled: false
    },
    guides: {
      indentation: false
    },
    accessibilitySupport: configurationService.getValue('editor.accessibilitySupport'),
    cursorBlinking: configurationService.getValue('editor.cursorBlinking')
  };
}
function getSimpleCodeEditorWidgetOptions() {
  return {
    isSimpleWidget: true,
    contributions: EditorExtensionsRegistry.getSomeEditorContributions([MenuPreventer.ID, SelectionClipboardContributionID, ContextMenuController.ID, SuggestController.ID, SnippetController2.ID, TabCompletionController.ID])
  };
}
exports.getSimpleCodeEditorWidgetOptions = getSimpleCodeEditorWidgetOptions;
exports.getSimpleEditorOptions = getSimpleEditorOptions;