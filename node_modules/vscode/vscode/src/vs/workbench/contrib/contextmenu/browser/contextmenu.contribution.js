const {
  __decorate,
  __param
} = require('../../../../../../../external/tslib/tslib.es6.js');
const {
  DisposableStore
} = require('../../../../base/common/lifecycle.js');
const {
  IContextMenuService
} = require('../../../../platform/contextview/browser/contextView.service.js');
const {
  ILayoutService
} = require('../../../../platform/layout/browser/layoutService.service.js');
const {
  Registry
} = require('../../../../platform/registry/common/platform.js');
const {
  Extensions
} = require('../../../common/contributions.js');
let ContextMenuContribution = class ContextMenuContribution {
  constructor(layoutService, contextMenuService) {
    this.disposables = new DisposableStore();
    const update = visible => layoutService.activeContainer.classList.toggle('context-menu-visible', visible);
    contextMenuService.onDidShowContextMenu(() => update(true), null, this.disposables);
    contextMenuService.onDidHideContextMenu(() => update(false), null, this.disposables);
  }
};
ContextMenuContribution = __decorate([__param(0, ILayoutService), __param(1, IContextMenuService)], ContextMenuContribution);
Registry.as(Extensions.Workbench).registerWorkbenchContribution(ContextMenuContribution, 4);