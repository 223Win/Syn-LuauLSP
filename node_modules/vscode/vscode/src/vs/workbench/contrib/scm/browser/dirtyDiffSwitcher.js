const {
  __decorate,
  __param
} = require('../../../../../../../external/tslib/tslib.es6.js');
const {
  localizeWithPath
} = require('../../../../nls.js');
const {
  Action
} = require('../../../../base/common/actions.js');
const {
  IContextViewService
} = require('../../../../platform/contextview/browser/contextView.service.js');
const {
  SelectActionViewItem
} = require('../../../../base/browser/ui/actionbar/actionViewItems.js');
const {
  defaultSelectBoxStyles
} = require('../../../../platform/theme/browser/defaultStyles.js');
const {
  IThemeService
} = require('../../../../platform/theme/common/themeService.service.js');
const {
  peekViewTitleBackground
} = require('../../../../editor/contrib/peekView/browser/peekView.js');
const {} = require('../../../../platform/theme/common/colorUtils.js');
const {} = require('../../../../platform/theme/common/colors/baseColors.js');
const {} = require('../../../../platform/theme/common/colors/chartsColors.js');
const {
  editorBackground
} = require('../../../../platform/theme/common/colors/editorColors.js');
const {} = require('../../../../platform/theme/common/colors/inputColors.js');
const {} = require('../../../../platform/theme/common/colors/listColors.js');
const {} = require('../../../../platform/theme/common/colors/menuColors.js');
const {} = require('../../../../platform/theme/common/colors/minimapColors.js');
const {} = require('../../../../platform/theme/common/colors/miscColors.js');
const {} = require('../../../../platform/theme/common/colors/quickpickColors.js');
const {} = require('../../../../platform/theme/common/colors/searchColors.js');
const _moduleId = "vs/workbench/contrib/scm/browser/dirtyDiffSwitcher";
let SwitchQuickDiffViewItem = class SwitchQuickDiffViewItem extends SelectActionViewItem {
  constructor(action, providers, selected, contextViewService, themeService) {
    const items = providers.map(provider => ({
      provider,
      text: provider
    }));
    let startingSelection = providers.indexOf(selected);
    if (startingSelection === -1) {
      startingSelection = 0;
    }
    const styles = {
      ...defaultSelectBoxStyles
    };
    const theme = themeService.getColorTheme();
    const editorBackgroundColor = theme.getColor(editorBackground);
    const peekTitleColor = theme.getColor(peekViewTitleBackground);
    const opaqueTitleColor = peekTitleColor?.makeOpaque(editorBackgroundColor) ?? editorBackgroundColor;
    styles.selectBackground = opaqueTitleColor.lighten(.6).toString();
    super(null, action, items, startingSelection, contextViewService, styles, {
      ariaLabel: localizeWithPath(_moduleId, 0, 'Switch quick diff base')
    });
    this.optionsItems = items;
  }
  setSelection(provider) {
    const index = this.optionsItems.findIndex(item => item.provider === provider);
    this.select(index);
  }
  getActionContext(_, index) {
    return this.optionsItems[index];
  }
  render(container) {
    super.render(container);
    this.setFocusable(true);
  }
};
SwitchQuickDiffViewItem = __decorate([__param(3, IContextViewService), __param(4, IThemeService)], SwitchQuickDiffViewItem);
class SwitchQuickDiffBaseAction extends Action {
  static {
    this.ID = 'quickDiff.base.switch';
  }
  static {
    this.LABEL = localizeWithPath(_moduleId, 1, "Switch Quick Diff Base");
  }
  constructor(callback) {
    super(SwitchQuickDiffBaseAction.ID, SwitchQuickDiffBaseAction.LABEL, undefined, undefined);
    this.callback = callback;
  }
  async run(event) {
    return this.callback(event);
  }
}
exports.SwitchQuickDiffBaseAction = SwitchQuickDiffBaseAction;
exports.SwitchQuickDiffViewItem = SwitchQuickDiffViewItem;