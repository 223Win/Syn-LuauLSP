const {
  __decorate,
  __param
} = require('../../../../../../../external/tslib/tslib.es6.js');
const {
  Codicon
} = require('../../../../base/common/codicons.js');
const {
  OS
} = require('../../../../base/common/platform.js');
const {
  localizeWithPath
} = require('../../../../nls.js');
const {
  IInstantiationService
} = require('../../../../platform/instantiation/common/instantiation.js');
const {
  registerIcon
} = require('../../../../platform/theme/common/iconRegistry.js');
const {
  EditorInput
} = require('../../../common/editor/editorInput.js');
const {
  KeybindingsEditorModel
} = require('./keybindingsEditorModel.js');
var KeybindingsEditorInput_1;
const _moduleId = "vs/workbench/services/preferences/browser/keybindingsEditorInput";
const KeybindingsEditorIcon = registerIcon('keybindings-editor-label-icon', Codicon.keyboard, localizeWithPath(_moduleId, 0, 'Icon of the keybindings editor label.'));
let KeybindingsEditorInput = class KeybindingsEditorInput extends EditorInput {
  static {
    KeybindingsEditorInput_1 = this;
  }
  static {
    this.ID = 'workbench.input.keybindings';
  }
  constructor(instantiationService) {
    super();
    this.searchOptions = null;
    this.resource = undefined;
    this.keybindingsModel = instantiationService.createInstance(KeybindingsEditorModel, OS);
  }
  get typeId() {
    return KeybindingsEditorInput_1.ID;
  }
  getName() {
    return localizeWithPath(_moduleId, 1, "Keyboard Shortcuts");
  }
  getIcon() {
    return KeybindingsEditorIcon;
  }
  async resolve() {
    return this.keybindingsModel;
  }
  matches(otherInput) {
    return otherInput instanceof KeybindingsEditorInput_1;
  }
  dispose() {
    this.keybindingsModel.dispose();
    super.dispose();
  }
};
KeybindingsEditorInput = KeybindingsEditorInput_1 = __decorate([__param(0, IInstantiationService)], KeybindingsEditorInput);
exports.KeybindingsEditorInput = KeybindingsEditorInput;