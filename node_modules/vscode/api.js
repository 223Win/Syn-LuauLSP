const {
    Breakpoint,
    TerminalOutputAnchor,
    ChatResultFeedbackKind,
    ChatVariableLevel,
    ChatCompletionItem,
    CallHierarchyIncomingCall,
    CallHierarchyItem,
    CallHierarchyOutgoingCall,
    CodeAction,
    CodeActionKind,
    CodeActionTriggerKind,
    CodeLens,
    Color,
    ColorInformation,
    ColorPresentation,
    ColorThemeKind,
    CommentMode,
    CommentState,
    CommentThreadCollapsibleState,
    CommentThreadState,
    CompletionItem,
    CompletionItemKind,
    CompletionItemTag,
    CompletionList,
    CompletionTriggerKind,
    ConfigurationTarget,
    CustomExecution,
    DebugAdapterExecutable,
    DebugAdapterInlineImplementation,
    DebugAdapterNamedPipeServer,
    DebugAdapterServer,
    DebugConsoleMode,
    DebugVisualization,
    DecorationRangeBehavior,
    Diagnostic,
    DiagnosticRelatedInformation,
    DiagnosticSeverity,
    DiagnosticTag,
    Disposable,
    DocumentHighlight,
    DocumentHighlightKind,
    MultiDocumentHighlight,
    DocumentLink,
    DocumentSymbol,
    EndOfLine,
    EnvironmentVariableMutatorType,
    EvaluatableExpression,
    InlineValueText,
    InlineValueVariableLookup,
    InlineValueEvaluatableExpression,
    InlineCompletionTriggerKind,
    ExtensionKind,
    ExtensionMode,
    ExternalUriOpenerPriority,
    FileChangeType,
    FileDecoration,
    FileSystemError,
    FoldingRange,
    FoldingRangeKind,
    FunctionBreakpoint,
    InlineSuggestion,
    InlineSuggestionList,
    Hover,
    Location,
    MarkdownString,
    ParameterInformation,
    PortAutoForwardAction,
    Position,
    ProcessExecution,
    ProgressLocation,
    QuickInputButtons,
    Range,
    RelativePattern,
    Selection,
    SelectionRange,
    SemanticTokens,
    SemanticTokensBuilder,
    SemanticTokensEdit,
    SemanticTokensEdits,
    SemanticTokensLegend,
    ShellExecution,
    ShellQuoting,
    SignatureHelp,
    SignatureHelpTriggerKind,
    SignatureInformation,
    SnippetString,
    SourceBreakpoint,
    StandardTokenType,
    StatusBarAlignment,
    SymbolInformation,
    SymbolKind,
    SymbolTag,
    Task,
    TaskGroup,
    TaskPanelKind,
    TaskRevealKind,
    TaskScope,
    TerminalLink,
    TerminalQuickFixCommand,
    TerminalQuickFixOpener,
    TerminalLocation,
    TerminalProfile,
    TerminalExitReason,
    TextDocumentSaveReason,
    TextEdit,
    SnippetTextEdit,
    TextEditorLineNumbersStyle,
    TextEditorRevealType,
    TextEditorSelectionChangeKind,
    SyntaxTokenType,
    TextDocumentChangeReason,
    ThemeColor,
    ThemeIcon,
    TreeItem,
    TreeItemCheckboxState,
    TreeItemCollapsibleState,
    TypeHierarchyItem,
    ViewColumn,
    WorkspaceEdit,
    DocumentDropEdit,
    DocumentPasteEdit,
    InlayHint,
    InlayHintLabelPart,
    InlayHintKind,
    RemoteAuthorityResolverError,
    ResolvedAuthority,
    ManagedResolvedAuthority,
    SourceControlInputBoxValidationType,
    ExtensionRuntime,
    TimelineItem,
    NotebookRange,
    NotebookCellKind,
    NotebookCellExecutionState,
    NotebookCellData,
    NotebookData,
    NotebookRendererScript,
    NotebookCellStatusBarAlignment,
    NotebookEditorRevealType,
    NotebookCellOutput,
    NotebookCellOutputItem,
    NotebookCellStatusBarItem,
    NotebookControllerAffinity,
    NotebookControllerAffinity2,
    NotebookEdit,
    NotebookKernelSourceAction,
    PortAttributes,
    LinkedEditingRanges,
    TestResultState,
    TestRunRequest,
    TestMessage,
    TestTag,
    TestRunProfileKind,
    DataTransfer,
    DataTransferItem,
    FileCoverage,
    StatementCoverage,
    BranchCoverage,
    DeclarationCoverage,
    WorkspaceTrustState,
    LanguageStatusSeverity,
    QuickPickItemKind,
    InputBoxValidationSeverity,
    TextTabInput,
    TextDiffTabInput,
    TextMergeTabInput,
    CustomEditorTabInput,
    NotebookEditorTabInput,
    NotebookDiffEditorTabInput,
    WebviewEditorTabInput,
    TerminalEditorTabInput,
    InteractiveWindowInput,
    ChatEditorTabInput,
    InteractiveSessionVoteDirection,
    ChatCopyKind,
    InteractiveEditorResponseFeedbackKind,
    RelatedInformationType,
    SpeechToTextStatus,
    KeywordRecognitionStatus
} = require('./vscode/src/vs/workbench/api/common/extHostTypes.js');
const {
    CancellationError
} = require('./vscode/src/vs/base/common/errors.js');
const {
    FileType,
    FilePermission
} = require('./vscode/src/vs/platform/files/common/files.js');
const {
    IndentAction
} = require('./vscode/src/vs/editor/common/languages/languageConfiguration.js');
const {
    CancellationTokenSource
} = require('./vscode/src/vs/base/common/cancellation.js');
const {
    CandidatePortSource
} = require('./vscode/src/vs/workbench/api/common/extHost.protocol.js');
const {
    DebugConfigurationProviderTriggerKind
} = require('./vscode/src/vs/workbench/contrib/debug/common/debug.js');
const {
    Emitter
} = require('./vscode/src/vs/base/common/event.js');
const {
    OverviewRulerLane
} = require('./vscode/src/vs/editor/common/model.js');
const {
    UIKind
} = require('./vscode/src/vs/workbench/services/extensions/common/extensionHostProtocol.js');
const {
    TextSearchCompleteMessageType
} = require('./vscode/src/vs/workbench/services/search/common/searchExtTypes.js');
const {
    LogLevel
} = require('./vscode/src/vs/platform/log/common/log.js');
const {
    EditSessionIdentityMatch
} = require('./vscode/src/vs/platform/workspace/common/editSessions.js');
const {
    TextEditorCursorStyle
} = require('./vscode/src/vs/editor/common/config/editorOptions.js');
const {
    URI
} = require('./vscode/src/vs/base/common/uri.js');
const {
    TelemetryTrustedValue
} = require('./vscode/src/vs/platform/telemetry/common/telemetryUtils.js');
let defaultApi;
function setDefaultApi(api) {
    defaultApi = api;
}
console.log(require("vscode/localExtensionHost"))
function createProxy(key) {
    return new Proxy({}, {
        get(target, p) {
            if (defaultApi == null) {
                throw new Error('Default api is not ready yet, do not forget to import \'vscode/localExtensionHost\' and wait for services initialization');
            }
            return defaultApi[key][p];
        }
    });
}
const api = {
    version: "1.89.1",
    tasks: createProxy('tasks'),
    notebooks: createProxy('notebooks'),
    scm: createProxy('scm'),
    comments: createProxy('comments'),
    authentication: createProxy('authentication'),
    tests: createProxy('tests'),
    extensions: createProxy('extensions'),
    debug: createProxy('debug'),
    env: createProxy('env'),
    commands: createProxy('commands'),
    window: createProxy('window'),
    workspace: createProxy('workspace'),
    languages: createProxy('languages'),
    l10n: createProxy('l10n'),
    interactive: createProxy('interactive'),
    ai: createProxy('ai'),
    chat: createProxy('chat'),
    speech: createProxy('speech'),
    Breakpoint: Breakpoint,
    TerminalOutputAnchor: TerminalOutputAnchor,
    ChatResultFeedbackKind: ChatResultFeedbackKind,
    ChatVariableLevel: ChatVariableLevel,
    ChatCompletionItem: ChatCompletionItem,
    CallHierarchyIncomingCall: CallHierarchyIncomingCall,
    CallHierarchyItem: CallHierarchyItem,
    CallHierarchyOutgoingCall: CallHierarchyOutgoingCall,
    CancellationError: undefined,
    CancellationTokenSource: undefined,
    CandidatePortSource: undefined,
    CodeAction: CodeAction,
    CodeActionKind: CodeActionKind,
    CodeActionTriggerKind: CodeActionTriggerKind,
    CodeLens: CodeLens,
    Color: Color,
    ColorInformation: ColorInformation,
    ColorPresentation: ColorPresentation,
    ColorThemeKind: ColorThemeKind,
    CommentMode: CommentMode,
    CommentState: CommentState,
    CommentThreadCollapsibleState: CommentThreadCollapsibleState,
    CommentThreadState: CommentThreadState,
    CompletionItem: CompletionItem,
    CompletionItemKind: CompletionItemKind,
    CompletionItemTag: CompletionItemTag,
    CompletionList: CompletionList,
    CompletionTriggerKind: CompletionTriggerKind,
    ConfigurationTarget: ConfigurationTarget,
    CustomExecution: CustomExecution,
    DebugAdapterExecutable: DebugAdapterExecutable,
    DebugAdapterInlineImplementation: DebugAdapterInlineImplementation,
    DebugAdapterNamedPipeServer: DebugAdapterNamedPipeServer,
    DebugAdapterServer: DebugAdapterServer,
    DebugConfigurationProviderTriggerKind: DebugConfigurationProviderTriggerKind,
    DebugConsoleMode: DebugConsoleMode,
    DebugVisualization: DebugVisualization,
    DecorationRangeBehavior: DecorationRangeBehavior,
    Diagnostic: Diagnostic,
    DiagnosticRelatedInformation: DiagnosticRelatedInformation,
    DiagnosticSeverity: DiagnosticSeverity,
    DiagnosticTag: DiagnosticTag,
    Disposable: Disposable,
    DocumentHighlight: DocumentHighlight,
    DocumentHighlightKind: DocumentHighlightKind,
    MultiDocumentHighlight: MultiDocumentHighlight,
    DocumentLink: DocumentLink,
    DocumentSymbol: DocumentSymbol,
    EndOfLine: EndOfLine,
    EnvironmentVariableMutatorType: EnvironmentVariableMutatorType,
    EvaluatableExpression: EvaluatableExpression,
    InlineValueText: InlineValueText,
    InlineValueVariableLookup: InlineValueVariableLookup,
    InlineValueEvaluatableExpression: InlineValueEvaluatableExpression,
    InlineCompletionTriggerKind: InlineCompletionTriggerKind,
    EventEmitter: Emitter,
    ExtensionKind: ExtensionKind,
    ExtensionMode: ExtensionMode,
    ExternalUriOpenerPriority: ExternalUriOpenerPriority,
    FileChangeType: FileChangeType,
    FileDecoration: FileDecoration,
    FileDecoration2: FileDecoration,
    FileSystemError: FileSystemError,
    FileType: FileType,
    FilePermission: FilePermission,
    FoldingRange: FoldingRange,
    FoldingRangeKind: FoldingRangeKind,
    FunctionBreakpoint: FunctionBreakpoint,
    InlineCompletionItem: InlineSuggestion,
    InlineCompletionList: InlineSuggestionList,
    Hover: Hover,
    IndentAction: IndentAction,
    Location: Location,
    MarkdownString: MarkdownString,
    OverviewRulerLane: OverviewRulerLane,
    ParameterInformation: ParameterInformation,
    PortAutoForwardAction: PortAutoForwardAction,
    Position: Position,
    ProcessExecution: ProcessExecution,
    ProgressLocation: ProgressLocation,
    QuickInputButtons: QuickInputButtons,
    Range: Range,
    RelativePattern: RelativePattern,
    Selection: Selection,
    SelectionRange: SelectionRange,
    SemanticTokens: SemanticTokens,
    SemanticTokensBuilder: SemanticTokensBuilder,
    SemanticTokensEdit: SemanticTokensEdit,
    SemanticTokensEdits: SemanticTokensEdits,
    SemanticTokensLegend: SemanticTokensLegend,
    ShellExecution: ShellExecution,
    ShellQuoting: ShellQuoting,
    SignatureHelp: SignatureHelp,
    SignatureHelpTriggerKind: SignatureHelpTriggerKind,
    SignatureInformation: SignatureInformation,
    SnippetString: SnippetString,
    SourceBreakpoint: SourceBreakpoint,
    StandardTokenType: StandardTokenType,
    StatusBarAlignment: StatusBarAlignment,
    SymbolInformation: SymbolInformation,
    SymbolKind: SymbolKind,
    SymbolTag: SymbolTag,
    Task: Task,
    TaskGroup: TaskGroup,
    TaskPanelKind: TaskPanelKind,
    TaskRevealKind: TaskRevealKind,
    TaskScope: TaskScope,
    TerminalLink: TerminalLink,
    TerminalQuickFixTerminalCommand: TerminalQuickFixCommand,
    TerminalQuickFixOpener: TerminalQuickFixOpener,
    TerminalLocation: TerminalLocation,
    TerminalProfile: TerminalProfile,
    TerminalExitReason: TerminalExitReason,
    TextDocumentSaveReason: TextDocumentSaveReason,
    TextEdit: TextEdit,
    SnippetTextEdit: SnippetTextEdit,
    TextEditorCursorStyle: TextEditorCursorStyle,
    TextEditorLineNumbersStyle: TextEditorLineNumbersStyle,
    TextEditorRevealType: TextEditorRevealType,
    TextEditorSelectionChangeKind: TextEditorSelectionChangeKind,
    SyntaxTokenType: SyntaxTokenType,
    TextDocumentChangeReason: TextDocumentChangeReason,
    ThemeColor: ThemeColor,
    ThemeIcon: ThemeIcon,
    TreeItem: TreeItem,
    TreeItemCheckboxState: TreeItemCheckboxState,
    TreeItemCollapsibleState: TreeItemCollapsibleState,
    TypeHierarchyItem: TypeHierarchyItem,
    UIKind: UIKind,
    Uri: URI,
    ViewColumn: ViewColumn,
    WorkspaceEdit: WorkspaceEdit,
    DocumentDropEdit: DocumentDropEdit,
    DocumentPasteEdit: DocumentPasteEdit,
    InlayHint: InlayHint,
    InlayHintLabelPart: InlayHintLabelPart,
    InlayHintKind: InlayHintKind,
    RemoteAuthorityResolverError: RemoteAuthorityResolverError,
    ResolvedAuthority: ResolvedAuthority,
    ManagedResolvedAuthority: ManagedResolvedAuthority,
    SourceControlInputBoxValidationType: SourceControlInputBoxValidationType,
    ExtensionRuntime: ExtensionRuntime,
    TimelineItem: TimelineItem,
    NotebookRange: NotebookRange,
    NotebookCellKind: NotebookCellKind,
    NotebookCellExecutionState: NotebookCellExecutionState,
    NotebookCellData: NotebookCellData,
    NotebookData: NotebookData,
    NotebookRendererScript: NotebookRendererScript,
    NotebookCellStatusBarAlignment: NotebookCellStatusBarAlignment,
    NotebookEditorRevealType: NotebookEditorRevealType,
    NotebookCellOutput: NotebookCellOutput,
    NotebookCellOutputItem: NotebookCellOutputItem,
    NotebookCellStatusBarItem: NotebookCellStatusBarItem,
    NotebookControllerAffinity: NotebookControllerAffinity,
    NotebookControllerAffinity2: NotebookControllerAffinity2,
    NotebookEdit: NotebookEdit,
    NotebookKernelSourceAction: NotebookKernelSourceAction,
    PortAttributes: PortAttributes,
    LinkedEditingRanges: LinkedEditingRanges,
    TestResultState: TestResultState,
    TestRunRequest: TestRunRequest,
    TestMessage: TestMessage,
    TestMessage2: TestMessage,
    TestTag: TestTag,
    TestRunProfileKind: TestRunProfileKind,
    TextSearchCompleteMessageType: TextSearchCompleteMessageType,
    DataTransfer: DataTransfer,
    DataTransferItem: DataTransferItem,
    FileCoverage: FileCoverage,
    StatementCoverage: StatementCoverage,
    BranchCoverage: BranchCoverage,
    FunctionCoverage: DeclarationCoverage,
    WorkspaceTrustState: WorkspaceTrustState,
    LanguageStatusSeverity: LanguageStatusSeverity,
    QuickPickItemKind: QuickPickItemKind,
    InputBoxValidationSeverity: InputBoxValidationSeverity,
    TabInputText: TextTabInput,
    TabInputTextDiff: TextDiffTabInput,
    TabInputTextMerge: TextMergeTabInput,
    TabInputCustom: CustomEditorTabInput,
    TabInputNotebook: NotebookEditorTabInput,
    TabInputNotebookDiff: NotebookDiffEditorTabInput,
    TabInputWebview: WebviewEditorTabInput,
    TabInputTerminal: TerminalEditorTabInput,
    TabInputInteractiveWindow: InteractiveWindowInput,
    TabInputChat: ChatEditorTabInput,
    TelemetryTrustedValue: TelemetryTrustedValue,
    LogLevel: LogLevel,
    EditSessionIdentityMatch: EditSessionIdentityMatch,
    InteractiveSessionVoteDirection: InteractiveSessionVoteDirection,
    ChatCopyKind: ChatCopyKind,
    InteractiveEditorResponseFeedbackKind: InteractiveEditorResponseFeedbackKind,
    RelatedInformationType: RelatedInformationType,
    SpeechToTextStatus: SpeechToTextStatus,
    KeywordRecognitionStatus: KeywordRecognitionStatus
};

exports.BranchCoverage = BranchCoverage;
exports.Breakpoint = Breakpoint;
exports.CallHierarchyIncomingCall = CallHierarchyIncomingCall;
exports.CallHierarchyItem = CallHierarchyItem;
exports.CallHierarchyOutgoingCall = CallHierarchyOutgoingCall;
exports.CancellationError = CancellationError;
exports.CancellationTokenSource = CancellationTokenSource;
exports.CandidatePortSource = CandidatePortSource;
exports.ChatCompletionItem = ChatCompletionItem;
exports.ChatCopyKind = ChatCopyKind;
exports.ChatResultFeedbackKind = ChatResultFeedbackKind;
exports.ChatVariableLevel = ChatVariableLevel;
exports.CodeAction = CodeAction;
exports.CodeActionKind = CodeActionKind;
exports.CodeActionTriggerKind = CodeActionTriggerKind;
exports.CodeLens = CodeLens;
exports.Color = Color;
exports.ColorInformation = ColorInformation;
exports.ColorPresentation = ColorPresentation;
exports.ColorThemeKind = ColorThemeKind;
exports.CommentMode = CommentMode;
exports.CommentState = CommentState;
exports.CommentThreadCollapsibleState = CommentThreadCollapsibleState;
exports.CommentThreadState = CommentThreadState;
exports.CompletionItem = CompletionItem;
exports.CompletionItemKind = CompletionItemKind;
exports.CompletionItemTag = CompletionItemTag;
exports.CompletionList = CompletionList;
exports.CompletionTriggerKind = CompletionTriggerKind;
exports.ConfigurationTarget = ConfigurationTarget;
exports.CustomExecution = CustomExecution;
exports.DataTransfer = DataTransfer;
exports.DataTransferItem = DataTransferItem;
exports.DebugAdapterExecutable = DebugAdapterExecutable;
exports.DebugAdapterInlineImplementation = DebugAdapterInlineImplementation;
exports.DebugAdapterNamedPipeServer = DebugAdapterNamedPipeServer;
exports.DebugAdapterServer = DebugAdapterServer;
exports.DebugConfigurationProviderTriggerKind = DebugConfigurationProviderTriggerKind;
exports.DebugConsoleMode = DebugConsoleMode;
exports.DebugVisualization = DebugVisualization;
exports.DecorationRangeBehavior = DecorationRangeBehavior;
exports.Diagnostic = Diagnostic;
exports.DiagnosticRelatedInformation = DiagnosticRelatedInformation;
exports.DiagnosticSeverity = DiagnosticSeverity;
exports.DiagnosticTag = DiagnosticTag;
exports.Disposable = Disposable;
exports.DocumentDropEdit = DocumentDropEdit;
exports.DocumentHighlight = DocumentHighlight;
exports.DocumentHighlightKind = DocumentHighlightKind;
exports.DocumentLink = DocumentLink;
exports.DocumentPasteEdit = DocumentPasteEdit;
exports.DocumentSymbol = DocumentSymbol;
exports.EditSessionIdentityMatch = EditSessionIdentityMatch;
exports.EndOfLine = EndOfLine;
exports.EnvironmentVariableMutatorType = EnvironmentVariableMutatorType;
exports.EvaluatableExpression = EvaluatableExpression;
exports.EventEmitter = undefined;
exports.ExtensionKind = ExtensionKind;
exports.ExtensionMode = ExtensionMode;
exports.ExtensionRuntime = ExtensionRuntime;
exports.ExternalUriOpenerPriority = ExternalUriOpenerPriority;
exports.FileChangeType = FileChangeType;
exports.FileCoverage = FileCoverage;
exports.FileDecoration = FileDecoration;
exports.FileDecoration2 = undefined;
exports.FilePermission = FilePermission;
exports.FileSystemError = FileSystemError;
exports.FileType = FileType;
exports.FoldingRange = FoldingRange;
exports.FoldingRangeKind = FoldingRangeKind;
exports.FunctionBreakpoint = FunctionBreakpoint;
exports.FunctionCoverage = undefined;
exports.Hover = Hover;
exports.IndentAction = IndentAction;
exports.InlayHint = InlayHint;
exports.InlayHintKind = InlayHintKind;
exports.InlayHintLabelPart = InlayHintLabelPart;
exports.InlineCompletionItem = undefined;
exports.InlineCompletionList = undefined;
exports.InlineCompletionTriggerKind = InlineCompletionTriggerKind;
exports.InlineValueEvaluatableExpression = InlineValueEvaluatableExpression;
exports.InlineValueText = InlineValueText;
exports.InlineValueVariableLookup = InlineValueVariableLookup;
exports.InputBoxValidationSeverity = InputBoxValidationSeverity;
exports.InteractiveEditorResponseFeedbackKind = InteractiveEditorResponseFeedbackKind;
exports.InteractiveSessionVoteDirection = InteractiveSessionVoteDirection;
exports.KeywordRecognitionStatus = KeywordRecognitionStatus;
exports.LanguageStatusSeverity = LanguageStatusSeverity;
exports.LinkedEditingRanges = LinkedEditingRanges;
exports.Location = Location;
exports.LogLevel = LogLevel;
exports.ManagedResolvedAuthority = ManagedResolvedAuthority;
exports.MarkdownString = MarkdownString;
exports.MultiDocumentHighlight = MultiDocumentHighlight;
exports.NotebookCellData = NotebookCellData;
exports.NotebookCellExecutionState = NotebookCellExecutionState;
exports.NotebookCellKind = NotebookCellKind;
exports.NotebookCellOutput = NotebookCellOutput;
exports.NotebookCellOutputItem = NotebookCellOutputItem;
exports.NotebookCellStatusBarAlignment = NotebookCellStatusBarAlignment;
exports.NotebookCellStatusBarItem = NotebookCellStatusBarItem;
exports.NotebookControllerAffinity = NotebookControllerAffinity;
exports.NotebookControllerAffinity2 = NotebookControllerAffinity2;
exports.NotebookData = NotebookData;
exports.NotebookEdit = NotebookEdit;
exports.NotebookEditorRevealType = NotebookEditorRevealType;
exports.NotebookKernelSourceAction = NotebookKernelSourceAction;
exports.NotebookRange = NotebookRange;
exports.NotebookRendererScript = NotebookRendererScript;
exports.OverviewRulerLane = OverviewRulerLane;
exports.ParameterInformation = ParameterInformation;
exports.PortAttributes = PortAttributes;
exports.PortAutoForwardAction = PortAutoForwardAction;
exports.Position = Position;
exports.ProcessExecution = ProcessExecution;
exports.ProgressLocation = ProgressLocation;
exports.QuickInputButtons = QuickInputButtons;
exports.QuickPickItemKind = QuickPickItemKind;
exports.Range = Range;
exports.RelatedInformationType = RelatedInformationType;
exports.RelativePattern = RelativePattern;
exports.RemoteAuthorityResolverError = RemoteAuthorityResolverError;
exports.ResolvedAuthority = ResolvedAuthority;
exports.Selection = Selection;
exports.SelectionRange = SelectionRange;
exports.SemanticTokens = SemanticTokens;
exports.SemanticTokensBuilder = SemanticTokensBuilder;
exports.SemanticTokensEdit = SemanticTokensEdit;
exports.SemanticTokensEdits = SemanticTokensEdits;
exports.SemanticTokensLegend = SemanticTokensLegend;
exports.ShellExecution = ShellExecution;
exports.ShellQuoting = ShellQuoting;
exports.SignatureHelp = SignatureHelp;
exports.SignatureHelpTriggerKind = SignatureHelpTriggerKind;
exports.SignatureInformation = SignatureInformation;
exports.SnippetString = SnippetString;
exports.SnippetTextEdit = SnippetTextEdit;
exports.SourceBreakpoint = SourceBreakpoint;
exports.SourceControlInputBoxValidationType = SourceControlInputBoxValidationType;
exports.SpeechToTextStatus = SpeechToTextStatus;
exports.StandardTokenType = StandardTokenType;
exports.StatementCoverage = StatementCoverage;
exports.StatusBarAlignment = StatusBarAlignment;
exports.SymbolInformation = SymbolInformation;
exports.SymbolKind = SymbolKind;
exports.SymbolTag = SymbolTag;
exports.SyntaxTokenType = SyntaxTokenType;
exports.TabInputChat = undefined;
exports.TabInputCustom = undefined;
exports.TabInputInteractiveWindow = undefined;
exports.TabInputNotebook = undefined;
exports.TabInputNotebookDiff = undefined;
exports.TabInputTerminal = undefined;
exports.TabInputText = undefined;
exports.TabInputTextDiff = undefined;
exports.TabInputTextMerge = undefined;
exports.TabInputWebview = undefined;
exports.Task = Task;
exports.TaskGroup = TaskGroup;
exports.TaskPanelKind = TaskPanelKind;
exports.TaskRevealKind = TaskRevealKind;
exports.TaskScope = TaskScope;
exports.TelemetryTrustedValue = TelemetryTrustedValue;
exports.TerminalExitReason = TerminalExitReason;
exports.TerminalLink = TerminalLink;
exports.TerminalLocation = TerminalLocation;
exports.TerminalOutputAnchor = TerminalOutputAnchor;
exports.TerminalProfile = TerminalProfile;
exports.TerminalQuickFixOpener = TerminalQuickFixOpener;
exports.TerminalQuickFixTerminalCommand = undefined;
exports.TestMessage = TestMessage;
exports.TestMessage2 = undefined;
exports.TestResultState = TestResultState;
exports.TestRunProfileKind = TestRunProfileKind;
exports.TestRunRequest = TestRunRequest;
exports.TestTag = TestTag;
exports.TextDocumentChangeReason = TextDocumentChangeReason;
exports.TextDocumentSaveReason = TextDocumentSaveReason;
exports.TextEdit = TextEdit;
exports.TextEditorCursorStyle = TextEditorCursorStyle;
exports.TextEditorLineNumbersStyle = TextEditorLineNumbersStyle;
exports.TextEditorRevealType = TextEditorRevealType;
exports.TextEditorSelectionChangeKind = TextEditorSelectionChangeKind;
exports.TextSearchCompleteMessageType = TextSearchCompleteMessageType;
exports.ThemeColor = ThemeColor;
exports.ThemeIcon = ThemeIcon;
exports.TimelineItem = TimelineItem;
exports.TreeItem = TreeItem;
exports.TreeItemCheckboxState = TreeItemCheckboxState;
exports.TreeItemCollapsibleState = TreeItemCollapsibleState;
exports.TypeHierarchyItem = TypeHierarchyItem;
exports.UIKind = UIKind;
exports.Uri = undefined;
exports.ViewColumn = ViewColumn;
exports.WorkspaceEdit = WorkspaceEdit;
exports.WorkspaceTrustState = WorkspaceTrustState;
exports.ai = undefined;
exports.authentication = undefined;
exports.chat = undefined;
exports.commands = api.commands;
exports.comments = undefined;
exports.debug = undefined;
exports.env = undefined;
exports.extensions = undefined;
exports.interactive = undefined;
exports.l10n = undefined;
exports.languages = undefined;
exports.notebooks = undefined;
exports.scm = undefined;
exports.setDefaultApi = setDefaultApi;
exports.speech = undefined;
exports.tasks = undefined;
exports.tests = undefined;
exports.version = "vs";
exports.window = undefined;
exports.workspace = api.workspace;